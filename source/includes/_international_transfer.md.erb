#International Transfer

As of now, basically the local transfer API and international transfer API shared some services such as `get transaction`, `create transaction` and `confirm transaction`.
For local transfer, `payer` will refer to the destination bank whilst for international transfer, `payer` will refer to the destination country.

<%# ----------------------- GET ALL TRANSACTION ----------------------- %>
##Get All Transaction
<div class="card">
    <a class="badge get">GET</a> /transactions
</div>

```javascript
//Request Example
{
    "page": 1,
    "per_page": 10
}
```
###Request Parameter
|Field|Required|Type|Description|
|----|----|----|----|
|`page`|No|Integer|Page number|
|`per_page`|No|Integer|Number of results per page (default 50, max 100)|

```javascript
{
    "status": 200,
    "page": 1,
    "per_page": 10,
    "total_page": 235,
    "data": [
        {
            "id": 6306,
            "reference_id": "TRX-REFERENCE-001",
            "callback_url": "https://your.business.com/webhook/endpoint",
            "payer_id": 172,
            "mode": "DESTINATION",
            "sender": {
                "firstname": "John",
                "lastname": "Doe",
                "middlename": "",
                "registered_name": "John Doe",
                "date_of_birth": "1997-05-10",
                "nationality_iso_code": "ALB",
                "country_of_birth_iso_code": "DZA",
                "gender": "MALE",
                "msisdn": "+62123123123",
                "id_type": "PASSPORT",
                "id_number": "32134723",
                "occupation": "self_employed",
                "id_country_iso_code": "IDN",
                "country_iso_code": "IDN",
                "address": "Address of John Doe",
                "address_country_iso_code": "IDN",
                "postal_code": "321",
                "city_id": "1",
                "province_id": "1",
                "msisdn_code": "+62",
                "bank_account_number": "7777777",
                "bank_id": "3",
                "city": "Singapore",
                "province_state": "Cdsa"
            },
            "source": {
                "currency": "IDR",
                "country_iso_code": "IDN"
            },
            "destination": {
                "currency": "GBP",
                "country_iso_code": "GBR",
                "amount": "10000"
            },
            "beneficiary": {
                "firstname": "Zofia",
                "lastname": "Middleton",
                "middlename": "Cope",
                "nationality_iso_code": "GBR",
                "city": "Manchester",
                "country_iso_code": "GBR",
                "id_type": "NATIONAL_ID",
                "id_number": "3440",
                "address": "29 Richmond Road",
                "bank_id": "1976",
                "bank_account_number": "1117994",
                "bsb_number": "732732",
                "swift_bic_code": "NLAMNL21",
                "iban": "NL91ABNA0417164300",
                "sort_code": "",
                "bank_account_holder_name": "Zofia Middleton Cope",
                "aba_routing_number": "111222333",
                "msisdn": "+628727271809",
                "gender": "female",
                "province_state": "Manchester",
                "postal_code": "321",
                "msisdn_code": "+62",
                "bank_code": "8601",
                "clabe": "646180224409608448"
            },
            "compliance": {
                "source_of_funds": "SALARY_INCOME",
                "purpose_of_remittance": "FAMILY_SUPPORT"
            },
            "created_at": "2022-07-06T16:31:53.697+07:00",
            "updated_at": "2022-07-06T16:47:31.688+07:00",
            "user_id": 7,
            "state": "confirmed",
            "amount": 166585311,
            "paid_at": "2022-07-06T16:47:15.000+07:00",
            "rate": "16658.531169",
            "fee": "0.0",
            "partner_id": 6,
            "completion_date": null,
            "sent_amount": "10000.0",
            "state_id": 2,
            "error_code": null,
            "error_message": null,
            "notes": "Lorem ipsum dolor sit amet",
            "transaction_type": "C2C",
            "user_email": "email@example.com",
            "payer_name": null
        }
    ]
}
```
###Response Parameter
|Field|Type|Description|
|----|----|----|
|`page`|Integer|Page number|
|`per_page`|Integer|Number of results per page (default 50, max 100)|
|`total_page`|Integer|Total page fetched from the server|
<%= partial "./includes/parameters_partial/transaction.md.erb"  %>

<%# ----------------------- GET TRANSACTION ----------------------- %>
##Get Transaction

<div class="card">
    <a class="badge get">GET</a>
    /transactions/:transaction_id
</div>

<br>

|Path parameter|Description|
|----|----|
|`:transaction_id`|Index number of the transaction|

```javascript
{
    "status": 200,
    "data":
        {
            "id": 6306,
            "reference_id": "TRX-REFERENCE-001",
            "callback_url": "https://your.business.com/webhook/endpoint",
            "payer_id": 172,
            "mode": "DESTINATION",
            "sender": {
                "firstname": "John",
                "lastname": "Doe",
                "middlename": "",
                "registered_name": "John Doe",
                "date_of_birth": "1997-05-10",
                "nationality_iso_code": "ALB",
                "country_of_birth_iso_code": "DZA",
                "gender": "MALE",
                "msisdn": "+62123123123",
                "id_type": "PASSPORT",
                "id_number": "32134723",
                "occupation": "self_employed",
                "id_country_iso_code": "IDN",
                "country_iso_code": "IDN",
                "address": "Address of John Doe",
                "address_country_iso_code": "IDN",
                "postal_code": "321",
                "city_id": "1",
                "province_id": "1",
                "msisdn_code": "+62",
                "bank_account_number": "7777777",
                "bank_id": "3",
                "city": "Singapore",
                "province_state": "Cdsa"
            },
            "source": {
                "currency": "IDR",
                "country_iso_code": "IDN"
            },
            "destination": {
                "currency": "GBP",
                "country_iso_code": "GBR",
                "amount": "10000"
            },
            "beneficiary": {
                "firstname": "Zofia",
                "lastname": "Middleton",
                "middlename": "Cope",
                "nationality_iso_code": "GBR",
                "city": "Manchester",
                "country_iso_code": "GBR",
                "id_type": "NATIONAL_ID",
                "id_number": "3440",
                "address": "29 Richmond Road",
                "bank_id": "1976",
                "bank_account_number": "1117994",
                "bsb_number": "732732",
                "swift_bic_code": "NLAMNL21",
                "iban": "NL91ABNA0417164300",
                "sort_code": "",
                "bank_account_holder_name": "Zofia Middleton Cope",
                "aba_routing_number": "111222333",
                "msisdn": "+628727271809",
                "gender": "female",
                "province_state": "Manchester",
                "postal_code": "321",
                "msisdn_code": "+62",
                "bank_code": "8601",
                "clabe": "646180224409608448"
            },
            "compliance": {
                "source_of_funds": "SALARY_INCOME",
                "purpose_of_remittance": "FAMILY_SUPPORT"
            },
            "created_at": "2022-07-06T16:31:53.697+07:00",
            "updated_at": "2022-07-06T16:47:31.688+07:00",
            "user_id": 7,
            "state": "confirmed",
            "amount": 166585311,
            "paid_at": "2022-07-06T16:47:15.000+07:00",
            "rate": "16658.531169",
            "fee": "0.0",
            "partner_id": 6,
            "completion_date": null,
            "sent_amount": "10000.0",
            "state_id": 2,
            "error_code": null,
            "error_message": null,
            "notes": "Lorem ipsum dolor sit amet",
            "transaction_type": "C2C",
            "user_email": "email@example.com",
            "payer_name": null
        }
}
```
###Response Parameter
|Field|Type|Description|
|----|----|----|
<%= partial "./includes/parameters_partial/transaction.md.erb"  %>



<%# ----------------------- CREATE TRANSACTION ----------------------- %>
##Create Transaction

<div class="card">
    <a class="badge post">POST</a> /transactions
</div>
<br>

To create a transaction there are some points needed to be taken.
Every destination country should have different requirement than the others based on:

1. Sender form
2. Beneficiary form

You can find the required field for each destination country [here](#get-required-fields-for-a-destination-country)



```javascript
{
  "reference_id": "TRX-REFERENCE-002",
  "callback_url": "https://your.business.com/webhook/endpoint",
  "payer_id": 1,
  "mode": "DESTINATION",
  "sender": {
    "firstname": "John",
    "lastname": "Doe",
    "country_iso_code": "IDN"
  },
  "source": {
    "currency": "IDR",
    "country_iso_code": "IDN"
  },
  "destination": {
    "amount": "10000",
    "currency": "GBP",
    "country_iso_code": "GBR"
  },
  "beneficiary": {
    "firstname": "Zofia",
    "lastname": "Cope",
    "country_iso_code": "GBR",
    "account": "123456"
  },
  "compliance": {
    "source_of_funds": "CASH",
    "beneficiary_relationship": "SIBLING_BROTHER_SISTER",
    "purpose_of_remittance": "FAMILY_SUPPORT"
  }
}
```

###Request Parameter

|Field|Required|Type|Description|
|----|----|----|----|
|`reference_id`|YES|String|Identifier of the transaction in your system (must be unique)|
|`callback_url`|NO|String|Your callback URL. Refer to [here](#callback)|
|`payer_id`|YES|String|Index number of destination country|
|`mode`|YES|String|Choose between `DESTINATION` or `SOURCE`. Affects where the `amount` field is required|
|`sender`|YES|Object|Content of the object is depending on the payers required attribute|
|`source`|YES|Object||
|`source[amount]`|NO|Decimal|Required if the mode is `SOURCE`|
|`source[currency]`|YES|String|Source currency ISO code. Using the standard of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)|
|`source[country_iso_code]`|YES|String|Source country ISO-3 code. Using the standard of [ISO 3116 country code|(https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)|
|`destination`|YES|Object||
|`destination[amount]`|NO|Decimal|Required if the mode is `DESTINATION`|
|`destination[currency]`|YES|String|Destination currency ISO code. Using the standard of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)|
|`destination[country_iso_code]`|YES|String|Source country ISO-3 code. Using the standard of [ISO 3116 country code|(https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)|
|`beneficiary`|YES|Object|Content of the object is depending on the payers required attribute|
|`compliance`|YES|Object|Content of the object is depending on the payers required attribute|
|`compliance[source_of_funds]`|YES|String|Refer to [source of funds](#source-of-funds) list|
|`compliance[beneficiary_relationship]`|YES|String|Refer to [beneficiary relationships](#beneficiary-relationship) list|
|`compliance[purpose_of_remittance]`|YES|String|Refer to [purpose of remittance](#purpose-of-remittances) list|

```javascript
{
    "status": 200,
    "data": {
        "id": 6348,
        "reference_id": "TRX-REFERENCE-002",
        "callback_url": "https://your.business.com/webhook/endpoint",
        "payer_id": 161,
        "mode": "DESTINATION",
        "sender": {
            "firstname": "John",
            "lastname": "Doe",
            "date_of_birth": "14/4/1990",
            "country_iso_code": "IDN",
            "nationality_iso_code": "IDN",
            "country_of_birth_iso_code": "IDN",
            "gender": "Male",
            "msisdn": "+6274124192387",
            "id_type": "PASSPORT",
            "id_number": "192873",
            "occupation": "other",
            "id_country_iso_code": "IDN",
            "address": "Address of John Doe",
            "address_country_iso_code": "IDN",
            "postal_code": "18723",
            "city": "City of John Doe",
            "province_state": "Province of John Doe"
        },
        "source": {
            "currency": "IDR",
            "country_iso_code": "IDN"
        },
        "destination": {
            "amount": "10000",
            "currency": "GBP",
            "country_iso_code": "GBR"
        },
        "beneficiary": {
            "firstname": "Zofia",
            "lastname": "Cope",
            "country_iso_code": "GBR",
            "account": "123456",
            "bank_id": 1086,
            "swift_bic_code": 198237,
            "iban": 12938791,
            "sort_code": 198273,
            "bank_account_number": 87648276
        },
        "compliance": {
            "source_of_funds": "CASH",
            "beneficiary_relationship": "SIBLING_BROTHER_SISTER",
            "purpose_of_remittance": "FAMILY_SUPPORT"
        },
        "created_at": "2022-07-13T09:42:31.149+07:00",
        "updated_at": "2022-07-13T09:42:31.622+07:00",
        "user_id": 7,
        "state": "created",
        "amount": 196260699,
        "paid_at": null,
        "rate": "19626.069949",
        "fee": "0.0",
        "partner_id": 6,
        "completion_date": null,
        "sent_amount": "10000.0",
        "state_id": null,
        "error_code": null,
        "error_message": null,
        "notes": null,
        "transaction_type": "C2C"
    }
}
```

###Response Parameter
|Field|Type|Description|
|----|----|----|
<%= partial "./includes/parameters_partial/transaction.md.erb"  %>

<%# ----------------------- CONFIRM A TRANSACTION ----------------------- %>
##Confirm Transaction

<div class="card">
    <a class="badge post">POST</a> /transactions/:transaction_id/confirm
</div>

<br>

After a transaction is created, you will need to confirm the transaction to process it.
The state of transaction should be `confirmed` after you hit this endpoint.

|Path parameter|Description|
|----|----|
|`:transaction_id`|Index number of the transaction|

```javascript
{
    "status": 200,
    "data": {
        "id": 6348,
        "state": "confirmed",
        "user_id": 7,
        "payer_id": 161,
        "reference_id": "TRX-REFERENCE-002",
        "notes": null,
        "callback_url": "https://your.business.com/webhook/endpoint",
        "mode": "DESTINATION",
        "sender": {
            "firstname": "John",
            "lastname": "Doe",
            "date_of_birth": "14/4/1990",
            "country_iso_code": "IDN",
            "nationality_iso_code": "IDN",
            "country_of_birth_iso_code": "IDN",
            "gender": "Male",
            "msisdn": "+6274124192387",
            "id_type": "PASSPORT",
            "id_number": "192873",
            "occupation": "other",
            "id_country_iso_code": "IDN",
            "address": "Address of John Doe",
            "address_country_iso_code": "IDN",
            "postal_code": "18723",
            "city": "City of John Doe",
            "province_state": "Province of John Doe"
        },
        "source": {
            "currency": "IDR",
            "country_iso_code": "IDN"
        },
        "destination": {
            "amount": "10000",
            "currency": "GBP",
            "country_iso_code": "GBR"
        },
        "beneficiary": {
            "firstname": "Zofia",
            "lastname": "Cope",
            "country_iso_code": "GBR",
            "account": "123456",
            "bank_id": 1086,
            "swift_bic_code": 198237,
            "iban": 12938791,
            "sort_code": 198273,
            "bank_account_number": 87648276
        },
        "compliance": {
            "source_of_funds": "CASH",
            "beneficiary_relationship": "SIBLING_BROTHER_SISTER",
            "purpose_of_remittance": "FAMILY_SUPPORT"
        },
        "created_at": "2022-07-13T09:42:31.149+07:00",
        "updated_at": "2022-07-13T10:46:58.379+07:00",
        "amount": 196260699,
        "paid_at": null,
        "rate": "19626.069949",
        "fee": "0.0",
        "partner_id": 6,
        "completion_date": null,
        "sent_amount": "10000.0",
        "state_id": 2,
        "error_code": null,
        "error_message": null,
        "transaction_type": "C2C"
    }
}
```

###Response Parameter
|Field|Type|Description|
|----|----|----|
<%= partial "./includes/parameters_partial/transaction.md.erb"  %>

<%# ----------------------- GET LIST OF SUPPORTED COUNTRY ----------------------- %>

##Get List of Supported Country
<div class="card">
    <a class="badge get">GET</a> /payers/cbse
</div>

```javascript
//Request Example
{
    "page": 1,
    "per_page": 10000
}
```
###Request Parameter
|Field|Required|Type|Description|
|----|----|----|----|
|`page`|No|Integer|Page number|
|`per_page`|No|Integer|Number of results per page (ensure to max it out to get the whole list of countries)|

```javascript
//Response Example
{
    "status": 200,
    "page": 1,
    "per_page": 10000,
    "total_page": 1,
    "data": [
        {
            "id": 157,
            "name": "USA",
            "full_name": null,
            "precision": "2",
            "country_iso_code": "USA",
            "currency": "USD",
            "minimum_amount": 30.0,
            "maximum_amount": 25000.0
        },
        {...}
    ]
}
```

###Response Parameter
|Field|Type|Description|
|----|----|----|
|`id`|Integer|Index number of the country|
|`name`|String|Country name|
|`full_name`|String|Country full name|
|`precision`|Integer|Number of digits after decimal point|
|`country_iso_code`|String|Country ISO-3 code. Using the standard of [ISO 3116 country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)|
|`currency`|String|Currency ISO code. Using the standard of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)|
|`minimum_amount`|Decimal|Minimum transfer amount|
|`maximum_amount`|Decimal|Maximum transfer amount|


<%# ----------------------- GET BANK LIST OF A COUNTRY ----------------------- %>

##Get Bank List of a Country
<div class="card">
    <a class="badge get">GET</a> /payers/:payer_id/banks
</div>

<br>

|Path parameter|Description|
|----|----|
|`:payer_id`|Index number of the country|

```javascript
//Response Example
{
    "status": 200,
    "data": [
        {
            "id": 1086,
            "name": "All Banks United Kingdom / GBP / Payment System: SEPA",
            "country_iso_3": "GBR",
            "additional_required_fields": ""
        }
    ]
}
```

###Response Parameter
|Field|Type|Description|
|----|----|----|
|`data`|Object|List of banks for the country|
|`data[id]`|Integer|Index number of a bank|
|`data[name]`|String|Bank name|
|`data[country_iso_3]`|String|Country code where the bank is located|
|`data[additional_required_fields]`|Object|Required fields for that particular payer|



<%# ----------------------- GET REQUIRED FIELDS FOR A DESTINATION COUNTRY ----------------------- %>

##Get Required Fields for a Destination Country
<div class="card">
    <a class="badge get">GET</a> /payers/:payer_id/attribute
</div>

<br>

|Path parameter|Description|
|----|----|
|`:payer_id`|Index number of the destination country|

```javascript
//Response Example
{
    "status": 200,
    "data": {
        "id": 7,
        "currency": "GBP",
        "attr": {
            "sender": {
                "personal": {
                    "details": [
                        "firstname",
                        "lastname",
                        "date_of_birth",
                        "nationality_iso_code",
                        "country_of_birth_iso_code",
                        "gender",
                        "msisdn",
                        "id_type",
                        "id_number",
                        "occupation",
                        "id_country_iso_code"
                    ],
                    "address": [
                        "country_iso_code",
                        "address",
                        "address_country_iso_code",
                        "postal_code",
                        "city",
                        "province_state"
                    ],
                    "bank": []
                },
                "business": {}
            },
            "recipient": {
                "personal": {
                    "details": [
                        "firstname",
                        "lastname",
                        "country_iso_code"
                    ],
                    "bank": [
                        "bank_id",
                        "swift_bic_code",
                        "iban",
                        "sort_code",
                        "bank_account_number"
                    ]
                },
                "business": {}
            }
        }
    }
}
```

###Response Parameter
|Field|Type|Description|
|----|----|----|
|`id`|Integer|Index number of destination country|
|`currency`|String|Currency ISO code. Using the standard of [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)|
|`attr`|Object||
|`attr[sender]`|Object|Required fields on sender object. Use `personal` if the sender is an individual, or use `business` if the sender is a business. Parameters detail can be seen [here](#required-fields)|
|`attr[recipient]`|Object|Required fields on beneficiary object. Use `personal` if the beneficiary is an individual, or use `business` if the beneficiary is a business. Parameters detail can be seen [here](#required-fields)|
